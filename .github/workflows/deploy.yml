name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: |
          # Add timestamp to index.html for cache busting
          TIMESTAMP=$(date +%s)
          yarn build
          sed -i "s/<\/head>/<meta name='timestamp' content='$TIMESTAMP'><\/head>/" dist/index.html
          # Add cache control headers
          echo '/*\n  Cache-Control: no-cache, no-store, must-revalidate\n  Pragma: no-cache\n  Expires: 0' > dist/_headers

      - name: Deploy
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Configure git to use HTTPS with token
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/SaeedZhiany/cv.git
          
          # Deploy using gh-pages with cache control
          yarn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 